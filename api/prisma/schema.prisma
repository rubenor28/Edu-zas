// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum UserType {
  ADMIN     @map("ADMIN")
  PROFESSOR @map("PROFESSOR")
  STUDENT   @map("STUDENT")
}

model User {
  id             BigInt   @id @default(autoincrement()) @map("user_id") @db.UnsignedBigInt
  active         Boolean  @default(true)
  role           UserType @default(STUDENT)
  firstName      String   @map("first_name") @db.VarChar(20)
  midName        String?  @map("mid_name") @db.VarChar(20)
  fatherLastname String   @map("father_lastname") @db.VarChar(20)
  motherLastname String?  @map("mother_lastname") @db.VarChar(20)
  email          String   @db.VarChar(30)
  password       String   @db.VarChar(60)
  createdAt      DateTime @default(now()) @map("created_at")
  modifiedAt     DateTime @updatedAt @map("modified_at")

  ownedClasses    Class[]
  taughtClasses   ClassProfessor[]
  enrolledClasses ClassStudentLink[]
  notifications   NotificationUserLink[]
  ownedResources  Resource[]
  ownedTests      Test[]

  @@map("users")
}

model Class {
  id         String   @id @map("class_id") @db.VarChar(20)
  active     Boolean  @default(true)
  className  String   @map("class_name") @db.VarChar(100)
  subject    String   @db.VarChar(100)
  section    String   @db.VarChar(100)
  ownerId    BigInt   @map("owner_id") @db.UnsignedBigInt
  createdAt  DateTime @default(now()) @map("created_at")
  modifiedAt DateTime @updatedAt @map("modified_at")

  owner         User               @relation(fields: [ownerId], references: [id])
  students      ClassStudentLink[]
  professors    ClassProfessor[]
  notifications Notification[]

  @@map("classes")
}

model ClassProfessor {
  classId     String   @map("class_id") @db.VarChar(20)
  professorId BigInt   @map("student_id") @db.UnsignedBigInt
  createdAt   DateTime @default(now()) @map("created_at")

  professor User  @relation(fields: [professorId], references: [id])
  class     Class @relation(fields: [classId], references: [id])

  @@id([classId, professorId])
  @@map("class_professors")
}

model ClassStudentLink {
  classId   String   @map("class_id") @db.VarChar(20)
  studentId BigInt   @map("student_id") @db.UnsignedBigInt
  createdAt DateTime @default(now()) @map("created_at")

  student User  @relation(fields: [studentId], references: [id])
  class   Class @relation(fields: [classId], references: [id])

  @@id([classId, studentId])
  @@map("class_students")
}

model Notification {
  id        BigInt   @id @map("notification_id") @db.UnsignedBigInt
  active    Boolean  @default(true)
  title     String   @db.VarChar(20)
  classId   String   @map("class_id") @db.VarChar(20)
  createdAt DateTime @default(now()) @map("created_at")

  class         Class                  @relation(fields: [classId], references: [id])
  notifiedUsers NotificationUserLink[]

  @@map("notifications")
}

model NotificationUserLink {
  notificationId BigInt   @map("notification_id") @db.UnsignedBigInt
  userId         BigInt   @map("user_id") @db.UnsignedBigInt
  readed         Boolean  @default(false)
  modifiedAt     DateTime @updatedAt @map("modified_at")

  notification Notification @relation(fields: [notificationId], references: [id])
  user         User         @relation(fields: [userId], references: [id])

  @@id([notificationId, userId])
  @@map("notification_per_user")
}

model Resource {
  id          BigInt  @id @map("resource_id") @db.UnsignedBigInt
  active      Boolean @default(true)
  title       String  @db.VarChar(35)
  content     Json    @db.Json
  professorId BigInt  @map("professor_id") @db.UnsignedBigInt

  owner User @relation(fields: [professorId], references: [id])

  @@map("resources")
}

model ResourceClassLink {
  classId     String @map("class_id") @db.VarChar(20)
  professorId BigInt @map("professor_id") @db.UnsignedBigInt

  @@id([classId, professorId])
  @@map("resources_per_class")
}

model Test {
  id               BigInt @id @map("test_id") @db.UnsignedBigInt
  title            String @db.VarChar(35)
  content          Json   @db.Json
  timeLimitMinutes Int?   @map("time_limit_minutes") @db.UnsignedInt
  professorId      BigInt @map("professor_id") @db.UnsignedBigInt

  owner User @relation(fields: [professorId], references: [id])

  @@map("tests")
}

model TestClassLink {
  visible Boolean @default(false)
  testId  BigInt  @map("test_id") @db.UnsignedBigInt
  classId String  @map("class_id") @db.VarChar(20)

  @@id([testId, classId])
  @@map("tests_per_class")
}
